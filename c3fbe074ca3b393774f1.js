(()=>{"use strict";var e={137:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",a=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),a&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),a&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,a,r,o){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(a)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var l=0;l<e.length;l++){var u=[].concat(e[l]);a&&i[u[0]]||(void 0!==o&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=o),n&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=n):u[2]=n),r&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=r):u[4]="".concat(r)),t.push(u))}},t}},362:e=>{e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]|(%20)/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},506:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),o="/*# ".concat(r," */"),i=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(i).concat([o]).join("\n")}return[t].join("\n")}},294:(e,t,n)=>{n.d(t,{Z:()=>f});var a=n(506),r=n.n(a),o=n(137),i=n.n(o),c=n(362),s=n.n(c),l=new URL(n(532),n.b),u=i()(r()),d=s()(l);u.push([e.id,'@font-face{font-family:"Roboto";src:url('+d+') format("truetype")}*{box-sizing:border-box;font-family:"Roboto",sans-serif}body{background:#fff}.container{display:flex;justify-content:center;flex-direction:column;max-width:750px;margin:10px auto}textarea{background:#2e2e2e;border-radius:5px;padding:20px;border:20px solid #000;color:#fff}textarea::-moz-placeholder{color:#fff}textarea:-ms-input-placeholder{color:#fff}textarea::placeholder{color:#fff}.description{text-align:center}.keyboard{font-size:16px;background:#eaeaea;color:#fff;border-radius:5px;padding:5px;margin-bottom:20px;display:flex;flex-direction:column;gap:5px}.keyboard .button-row{display:flex;gap:5px}.keyboard .keyboard-button{display:inline-block;flex-grow:1;cursor:pointer;font-size:16px;border-bottom:1px solid #b5b5b5;border-radius:5px;box-shadow:0 0 3px -1px rgba(0,0,0,.3);align-items:center;background:#fff;display:flex;height:40px;justify-content:center;color:#000}.keyboard .keyboard-button:hover{background-color:#eaeaea}.keyboard .keyboard-button:active{background:#e6e6e6;box-shadow:1px 1px 2px rgba(255,255,255,.2);text-decoration:none;transition:all 25ms linear}.keyboard .keyboard-button.active{background:#e6e6e6;box-shadow:1px 1px 2px rgba(255,255,255,.2);text-decoration:none;transition:all 25ms linear}.keyboard .enter,.keyboard .shift{width:66px}.keyboard .space{width:290px}',"",{version:3,sources:["webpack://./assets/styles/fonts.scss","webpack://./assets/styles/styles.scss"],names:[],mappings:"AAAA,WACI,oBAAA,CACA,8DAAA,CAAA,ECCA,qBAAA,CACA,+BAAA,CAGJ,KACI,eAAA,CAGJ,WACI,YAAA,CACA,sBAAA,CACA,qBAAA,CACA,eAAA,CACA,gBAAA,CAGJ,SACI,kBAAA,CACA,iBAAA,CACA,YAAA,CACA,sBAAA,CAMA,UAAA,CAJA,2BACI,UAAA,CADJ,+BACI,UAAA,CADJ,sBACI,UAAA,CAMR,aACI,iBAAA,CAGJ,UACI,cAAA,CACA,kBAAA,CACA,UAAA,CACA,iBAAA,CACA,WAAA,CACA,kBAAA,CACA,YAAA,CACA,qBAAA,CACA,OAAA,CAEA,sBACI,YAAA,CACA,OAAA,CAIJ,2BACI,oBAAA,CACA,WAAA,CACA,cAAA,CACA,cAAA,CACA,+BAAA,CACA,iBAAA,CACA,sCAAA,CACA,kBAAA,CACA,eAAA,CACA,YAAA,CACA,WAAA,CACA,sBAAA,CACA,UAAA,CAGA,iCACI,wBAAA,CAGJ,kCACI,kBAAA,CACA,2CAAA,CACA,oBAAA,CACA,0BAAA,CAGJ,kCACI,kBAAA,CACA,2CAAA,CACA,oBAAA,CACA,0BAAA,CAYR,kCAEI,UAAA,CAGJ,iBACI,WAAA",sourcesContent:["@font-face {\n    font-family: 'Roboto';\n    src: url('../fonts/Roboto/Roboto-Regular.ttf') format('truetype');\n}","@import \"fonts.scss\";\n\n* {\n    box-sizing: border-box;\n    font-family: 'Roboto', sans-serif;\n}\n\nbody {\n    background: white;\n}\n\n.container {\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    max-width: 750px;\n    margin: 10px auto;\n}\n\ntextarea {\n    background: #2e2e2e;\n    border-radius: 5px;\n    padding: 20px;\n    border: 20px solid black;\n\n    &::placeholder {\n        color: white;\n    }\n\n    color: white;\n}\n\n.description {\n    text-align: center\n}\n\n.keyboard {\n    font-size: 16px;\n    background: #eaeaea;\n    color: white;\n    border-radius: 5px;\n    padding: 5px;\n    margin-bottom: 20px;\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n\n    .button-row {\n        display: flex;\n        gap: 5px;\n    }\n\n\n    .keyboard-button {\n        display: inline-block;\n        flex-grow: 1;\n        cursor: pointer;\n        font-size: 16px;\n        border-bottom: 1px solid #b5b5b5;\n        border-radius: 5px;\n        box-shadow: 0 0 3px -1px rgba(0, 0, 0, .3);\n        align-items: center;\n        background: #fff;\n        display: flex;\n        height: 40px;\n        justify-content: center;\n        color: black;\n\n\n        &:hover {\n            background-color: #eaeaea\n        }\n\n        &:active {\n            background: darken(#eaeaea, 1.5%);\n            box-shadow: 1px 1px 2px rgba(#fff, .2);\n            text-decoration: none;\n            transition: all 25ms linear;\n        }\n\n        &.active {\n            background: darken(#eaeaea, 1.5%);\n            box-shadow: 1px 1px 2px rgba(#fff, .2);\n            text-decoration: none;\n            transition: all 25ms linear;\n        }\n    }\n\n    // .backspace {}\n\n    // .tab {}\n\n    // .del {}\n\n    // .capslock {}\n\n    .enter,\n    .shift {\n        width: 66px;\n    }\n\n    .space {\n        width: 290px;\n    }\n}"],sourceRoot:""}]);const f=u},892:e=>{var t=[];function n(e){for(var n=-1,a=0;a<t.length;a++)if(t[a].identifier===e){n=a;break}return n}function a(e,a){for(var o={},i=[],c=0;c<e.length;c++){var s=e[c],l=a.base?s[0]+a.base:s[0],u=o[l]||0,d="".concat(l," ").concat(u);o[l]=u+1;var f=n(d),A={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==f)t[f].references++,t[f].updater(A);else{var p=r(A,a);a.byIndex=c,t.splice(c,0,{identifier:d,updater:p,references:1})}i.push(d)}return i}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var o=a(e=e||[],r=r||{});return function(e){e=e||[];for(var i=0;i<o.length;i++){var c=n(o[i]);t[c].references--}for(var s=a(e,r),l=0;l<o.length;l++){var u=n(o[l]);0===t[u].references&&(t[u].updater(),t.splice(u,1))}o=s}}},311:e=>{var t={};e.exports=function(e,n){var a=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(n)}},60:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},192:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},760:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var a="";n.supports&&(a+="@supports (".concat(n.supports,") {")),n.media&&(a+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(a+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),a+=n.css,r&&(a+="}"),n.media&&(a+="}"),n.supports&&(a+="}");var o=n.sourceMap;o&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),t.styleTagTransform(a,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},865:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},532:(e,t,n)=>{e.exports=n.p+"a8d6ac03c7b96b7acb62.ttf"}},t={};function n(a){var r=t[a];if(void 0!==r)return r.exports;var o=t[a]={id:a,exports:{}};return e[a](o,o.exports,n),o.exports}n.m=e,n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var a=t.getElementsByTagName("script");a.length&&(e=a[a.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.b=document.baseURI||self.location.href,(()=>{var e=n(892),t=n.n(e),a=n(760),r=n.n(a),o=n(311),i=n.n(o),c=n(192),s=n.n(c),l=n(60),u=n.n(l),d=n(865),f=n.n(d),A=n(294),p={};p.styleTagTransform=f(),p.setAttributes=s(),p.insert=i().bind(null,"head"),p.domAPI=r(),p.insertStyleElement=u(),t()(A.Z,p),A.Z&&A.Z.locals&&A.Z.locals;const y={default:["` 1 2 3 4 5 6 7 8 9 0 - = {bksp}","{tab} q w e r t y u i o p [ ] \\","{capslock} a s d f g h j k l ; ' {enter}","{shiftleft} z x c v b n m , . / ↑ {shiftright}","{ctrlleft} {home} {altleft} {space} {altright} ← ↓ → {ctrlright}"],shift:["~ ! @ # $ % ^ & * ( ) _ + {bksp}","{tab} Q W E R T Y U I O P { } |",'{capslock} A S D F G H J K L : " {enter}',"{shiftleft} Z X C V B N M < > ? ↑ {shiftright}","{ctrlleft} {home} {altleft} {space} {altright} ← ↓ → {ctrlright}"]};var h={"{bksp}":{displayName:"Backspace",className:"backspace",value:"backspace"},"{tab}":{displayName:"&#11134;",className:"tab",value:"&emsp;"},"{del}":{displayName:"Del",className:"del",value:"del"},"{capslock}":{displayName:"Caps Lock",className:"capslock"},"{enter}":{displayName:"&#9166;",className:"enter",value:"&#13;"},"{shiftleft}":{displayName:"&#8679;",className:"shift"},"{shiftright}":{displayName:"&#8679;",className:"shift"},"{ctrlleft}":{displayName:"Ctrl",className:"ctrl"},"{home}":{displayName:"&#10070;",className:"home"},"{altleft}":{displayName:"Alt",className:"alt"},"{space}":{displayName:"",className:"space",value:"&nbsp;"},"{altright}":{displayName:"Alt",className:"alt"},"{ctrlright}":{displayName:"Ctrl",className:"ctrl"}},b="EN",g=Object.freeze({GENERAL:1,FUNCTIONAL:2}),C=Object.freeze({EN:y,RU:{default:["ё 1 2 3 4 5 6 7 8 9 0 - = {bksp}","{tab} й ц у к е н г ш щ з х ъ \\","{capslock} ф ы в а п р о л д ж э {enter}","{shiftleft} я ч с м и т ь б ю . ↑ {shiftright}","{ctrlleft} {home} {altleft} {space} {altright} ← ↓ → {ctrlright}"],shift:['Ё ! " № ; % : ? * ( ) _ + {bksp}',"{tab} Й Ц У К Е Н Г Ш Щ З Х Ъ /","{capslock} Ф Ы В А П Р О Л Д Ж Э {enter}","{shiftleft} Я Ч С М И Т Ь Б Ю , ↑ {shiftright}","{ctrlleft} {home} {altleft} {space} {altright} ← ↓ → {ctrlright}"]}}),m=["Backquote Digit1 Digit2 Digit3 Digit4 Digit5 Digit6 Digit7 Digit8 Digit9 Digit0 Minus Equal Backspace","Tab KeyQ KeyW KeyE KeyR KeyT KeyY KeyU KeyI KeyO KeyP BracketLeft BracketRight Backslash","CapsLock KeyA KeyS KeyD KeyF KeyG KeyH KeyJ KeyK KeyL Semicolon Quote Enter","ShiftLeft KeyZ KeyX KeyC KeyV KeyB KeyN KeyM Comma Period Slash ArrowUp ShiftRight","ControlLeft OSLeft AltLeft Space AltRight ArrowLeft ArrowDown ArrowRight ControlRight"],v=function(){for(var e=[],t=0;t<m.length;t+=1)e.push(m[t].split(" "));return e};function k(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}const x=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)}var t,n;return t=e,n=[{key:"getCurrentLocale",value:function(){return localStorage.getItem("currentLanguage")||b}},{key:"setCurrentLocale",value:function(e){localStorage.setItem("currentLanguage",e)}},{key:"getButtonType",value:function(e){return e.includes("{")&&e.includes("}")&&"{//}"!==e?g.FUNCTIONAL:g.GENERAL}},{key:"getLayout",value:function(e){return C[e]}},{key:"getFunctionalButton",value:function(e){return h[e]}}],null&&k(t.prototype,null),n&&k(t,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function w(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function L(e,t,n){return function(e,t){if(e!==t)throw new TypeError("Private static access of wrong provenance")}(e,t),n}function B(e,t,n){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return n}var N=new WeakSet,E=function(){function e(t,n){var a,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(a=this,r=N),r.add(a),this.layout=x.getLayout(x.getCurrentLocale())||y,this.keyboardContainer=t,this.targetTextarea=n,this.isCapslock=!1}var t,n,a;return t=e,a=[{key:"createButtonsKeys",value:function(e,t){for(var n=x.getLayout(e)[t],a=document.querySelectorAll(".button-row"),r=0;r<a.length;r+=1)for(var o=a[r].querySelectorAll(".keyboard-button"),i=n[r].split(" "),c=0;c<o.length;c+=1){var s=i[c],l=o[c],u=s;switch(x.getButtonType(s)){case g.FUNCTIONAL:var d=x.getFunctionalButton(s);u=d.displayName,d.value&&l.setAttribute("data-btnvalue",d.value);break;case g.GENERAL:l.setAttribute("data-btnvalue",s)}l.innerHTML=u}}},{key:"createShiftHandler",value:function(){document.addEventListener("keydown",(function(t){t.shiftKey&&e.createButtonsKeys(x.getCurrentLocale(),"shift")}),!1),document.addEventListener("keyup",(function(t){"Shift"===t.key&&e.createButtonsKeys(x.getCurrentLocale(),"default")}),!1)}},{key:"createCapsLockHandler",value:function(){document.addEventListener("keydown",(function(t){if("CapsLock"===t.code&&t.getModifierState){var n=t.getModifierState("CapsLock")?"shift":"default";e.createButtonsKeys(x.getCurrentLocale(),n)}}),!1)}},{key:"createBackspaceClickHandler",value:function(){document.addEventListener("click",(function(t){if("CapsLock"===t.code&&t.getModifierState){var n=t.getModifierState("CapsLock")?"shift":"default";e.createButtonsKeys(x.getCurrentLocale(),n)}}),!1)}},{key:"createLanguageSwitcher",value:function(){x.setCurrentLocale(x.getCurrentLocale()),document.addEventListener("keyup",(function(t){if(t.ctrlKey&&"AltLeft"===t.code){var n=x.getCurrentLocale()===b?"RU":b;x.setCurrentLocale(n),e.createButtonsKeys(n,"default")}}),!1)}}],(n=[{key:"init",value:function(){for(var t=this,n=this.layout.default,a=0;a<n.length;a+=1){var r=document.createElement("div"),o=n[a].split(" ");r.classList.add("button-row");for(var i=0;i<o.length;i+=1){var c=document.createElement("div");c.classList.add("keyboard-button");var s=o[i],l=s;switch(x.getButtonType(s)){case g.FUNCTIONAL:var u=x.getFunctionalButton(s);l=u.displayName,c.classList.add(u.className),u.value&&c.setAttribute("data-btnvalue",u.value);break;case g.GENERAL:c.setAttribute("data-btnvalue",s)}c.setAttribute("data-key",v()[a][i]),c.innerHTML=l,c.addEventListener("click",(function(e){return B(t,N,K).call(t,e)})),c.addEventListener("mousedown",(function(e){return B(t,N,K).call(t,e)})),c.addEventListener("mouseup",(function(e){return B(t,N,K).call(t,e)})),r.appendChild(c)}this.keyboardContainer.appendChild(r)}e.createLanguageSwitcher(),e.createShiftHandler(),e.createCapsLockHandler(),document.addEventListener("keydown",(function(t){return L(e,e,S).call(e,t)})),document.addEventListener("keyup",(function(t){return L(e,e,S).call(e,t)}))}}])&&w(t.prototype,n),a&&w(t,a),Object.defineProperty(t,"prototype",{writable:!1}),e}();function S(e){var t=document.querySelector(".keyboard-button[data-key='".concat(e.code,"']"));t&&("keyup"===e.type&&t.classList.remove("active"),"keydown"===e.type&&(t.classList.add("active"),t.click())),e.shiftKey&&E.createButtonsKeys(x.getCurrentLocale(),"shift"),e.preventDefault()}function K(e){if("click"===e.type)switch(e.target.dataset.key){case"Backspace":var t=this.targetTextarea.selectionStart,n=this.targetTextarea.selectionEnd,a=this.targetTextarea.value.length;this.targetTextarea.innerHTML=t===n?this.targetTextarea.value.slice(0,t-1):this.targetTextarea.value.slice(0,t)+this.targetTextarea.value.slice(n,a);break;case"ShiftLeft":case"ShiftRight":break;case"CapsLock":this.isCapslock=!this.isCapslock;var r=this.isCapslock?"shift":"default";E.createButtonsKeys(x.getCurrentLocale(),r);break;default:e.target.dataset.btnvalue&&(this.targetTextarea.innerHTML+=e.target.dataset.btnvalue)}"mousedown"!==e.type||"ShiftLeft"!==e.target.dataset.key&&"ShiftRight"!==e.target.dataset.key||E.createButtonsKeys(x.getCurrentLocale(),"shift"),"mouseup"!==e.type||"ShiftLeft"!==e.target.dataset.key&&"ShiftRight"!==e.target.dataset.key||E.createButtonsKeys(x.getCurrentLocale(),"default")}const T=E;function R(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}new(function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.parentElement=t}var t,n;return t=e,(n=[{key:"init",value:function(){!function(e){var t=document.createElement("div");t.classList.add("container");var n=function(e){var t=document.createElement("textarea");return t.classList.add("textarea"),t.placeholder="Start typing...",t.cols="80",t.rows="10",t.autofocus=!0,e.appendChild(t),t}(t);e.appendChild(t),function(e,t){var n=document.createElement("div");n.classList.add("keyboard"),new T(n,t).init(),e.appendChild(n)}(t,n),function(e){var t=document.createElement("div");t.classList.add("description"),t.innerText="Клавиатура создана в операционной системе Windows\n        Для переключения языка комбинация: левыe ctrl + alt",e.appendChild(t)}(t)}(this.parentElement)}}])&&R(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}())(document.querySelector("body")).init()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,