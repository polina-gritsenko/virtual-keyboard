(()=>{"use strict";var e={137:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var l=0;l<e.length;l++){var p=[].concat(e[l]);r&&i[p[0]]||(void 0!==o&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=o),n&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=n):p[2]=n),a&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=a):p[4]="".concat(a)),t.push(p))}},t}},362:e=>{e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]|(%20)/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},506:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */"),i=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(i).concat([o]).join("\n")}return[t].join("\n")}},294:(e,t,n)=>{n.d(t,{Z:()=>u});var r=n(506),a=n.n(r),o=n(137),i=n.n(o),s=n(362),c=n.n(s),l=new URL(n(532),n.b),p=i()(a()),A=c()(l);p.push([e.id,'@font-face{font-family:"Roboto";src:url('+A+') format("truetype")}*{box-sizing:border-box;font-family:"Roboto",sans-serif}body{background:#fff}.container{display:flex;justify-content:center;flex-direction:column;max-width:750px;margin:10px auto}textarea{background:#a0a0a0;border-radius:5px;color:#fff}textarea::-moz-placeholder{color:#fff}textarea:-ms-input-placeholder{color:#fff}textarea::placeholder{color:#fff}.description{text-align:center}.keyboard{font-size:16px;background:#eaeaea;color:#fff;border-radius:5px;padding:5px;margin-bottom:20px;display:flex;flex-direction:column;gap:5px}.keyboard .button-row{display:flex;gap:5px}.keyboard .button{display:inline-block;flex-grow:1;cursor:pointer;font-size:16px;border-bottom:1px solid #b5b5b5;border-radius:5px;box-shadow:0 0 3px -1px rgba(0,0,0,.3);align-items:center;background:#fff;display:flex;height:40px;justify-content:center;color:#000}.keyboard .enter,.keyboard .shift{width:66px}.keyboard .space{width:290px}',"",{version:3,sources:["webpack://./assets/styles/fonts.scss","webpack://./assets/styles/styles.scss"],names:[],mappings:"AAAA,WACI,oBAAA,CACA,8DAAA,CAAA,ECCA,qBAAA,CACA,+BAAA,CAGJ,KACI,eAAA,CAIJ,WACI,YAAA,CACA,sBAAA,CACA,qBAAA,CACA,eAAA,CACA,gBAAA,CAGJ,SACI,kBAAA,CACA,iBAAA,CAMA,UAAA,CAJA,2BACI,UAAA,CADJ,+BACI,UAAA,CADJ,sBACI,UAAA,CAMR,aACI,iBAAA,CAGJ,UACI,cAAA,CACA,kBAAA,CACA,UAAA,CACA,iBAAA,CACA,WAAA,CACA,kBAAA,CACA,YAAA,CACA,qBAAA,CACA,OAAA,CAEA,sBACI,YAAA,CACA,OAAA,CAQJ,kBACI,oBAAA,CACA,WAAA,CACA,cAAA,CACA,cAAA,CACA,+BAAA,CACA,iBAAA,CACA,sCAAA,CACA,kBAAA,CACA,eAAA,CACA,YAAA,CACA,WAAA,CACA,sBAAA,CACA,UAAA,CAWJ,kCAEI,UAAA,CAGJ,iBACI,WAAA",sourcesContent:["@font-face {\r\n    font-family: 'Roboto';\r\n    src: url('../fonts/Roboto/Roboto-Regular.ttf') format('truetype');\r\n}","@import \"fonts.scss\";\r\n\r\n* {\r\n    box-sizing: border-box;\r\n    font-family: 'Roboto', sans-serif;\r\n}\r\n\r\nbody {\r\n    background: white;\r\n    // font-family: Helvetica, sans-serif;\r\n}\r\n\r\n.container {\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    max-width: 750px;\r\n    margin: 10px auto;\r\n}\r\n\r\ntextarea {\r\n    background: #A0A0A0;\r\n    border-radius: 5px;\r\n\r\n    &::placeholder {\r\n        color: white;\r\n    }\r\n\r\n    color: white;\r\n}\r\n\r\n.description {\r\n    text-align: center\r\n}\r\n\r\n.keyboard {\r\n    font-size: 16px;\r\n    background: #eaeaea;\r\n    color: white;\r\n    border-radius: 5px;\r\n    padding: 5px;\r\n    margin-bottom: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 5px;\r\n\r\n    .button-row {\r\n        display: flex;\r\n        gap: 5px;\r\n    }\r\n\r\n    // .button-row:not(:last-child) {\r\n    //     margin-bottom: 5px;\r\n    // }\r\n\r\n\r\n    .button {\r\n        display: inline-block;\r\n        flex-grow: 1;\r\n        cursor: pointer;\r\n        font-size: 16px;\r\n        border-bottom: 1px solid #b5b5b5;\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 3px -1px rgba(0, 0, 0, .3);\r\n        align-items: center;\r\n        background: #fff;\r\n        display: flex;\r\n        height: 40px;\r\n        justify-content: center;\r\n        color: black;\r\n    }\r\n\r\n    .backspace {}\r\n\r\n    .tab {}\r\n\r\n    .del {}\r\n\r\n    .capslock {}\r\n\r\n    .enter,\r\n    .shift {\r\n        width: 66px;\r\n    }\r\n\r\n    .space {\r\n        width: 290px;\r\n    }\r\n\r\n    // .button:not(:last-child) {\r\n    //     margin-right: 5px;\r\n    // }\r\n}"],sourceRoot:""}]);const u=p},892:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var o={},i=[],s=0;s<e.length;s++){var c=e[s],l=r.base?c[0]+r.base:c[0],p=o[l]||0,A="".concat(l," ").concat(p);o[l]=p+1;var u=n(A),f={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)t[u].references++,t[u].updater(f);else{var d=a(f,r);r.byIndex=s,t.splice(s,0,{identifier:A,updater:d,references:1})}i.push(A)}return i}function a(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var i=0;i<o.length;i++){var s=n(o[i]);t[s].references--}for(var c=r(e,a),l=0;l<o.length;l++){var p=n(o[l]);0===t[p].references&&(t[p].updater(),t.splice(p,1))}o=c}}},311:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},60:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},192:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},760:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var a=void 0!==n.layer;a&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,a&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var o=n.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},865:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},532:(e,t,n)=>{e.exports=n.p+"a8d6ac03c7b96b7acb62.ttf"}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var o=t[r]={id:r,exports:{}};return e[r](o,o.exports,n),o.exports}n.m=e,n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.b=document.baseURI||self.location.href,(()=>{var e=n(892),t=n.n(e),r=n(760),a=n.n(r),o=n(311),i=n.n(o),s=n(192),c=n.n(s),l=n(60),p=n.n(l),A=n(865),u=n.n(A),f=n(294),d={};d.styleTagTransform=u(),d.setAttributes=c(),d.insert=i().bind(null,"head"),d.domAPI=a(),d.insertStyleElement=p(),t()(f.Z,d),f.Z&&f.Z.locals&&f.Z.locals;const b={default:["` 1 2 3 4 5 6 7 8 9 0 - = {bksp}","{tab} q w e r t y u i o p [ ] \\","{capslock} a s d f g h j k l ; ' {enter}","{shiftleft} z x c v b n m , . / ↑ {shiftright}","{ctrlleft} {home} {altleft} {space} {altright} ← ↓ → {ctrlright}"],shift:["~ ! @ # $ % ^ & * ( ) _ + {bksp}","{tab} Q W E R T Y U I O P { } |",'{lock} A S D F G H J K L : " {enter}',"{shift} Z X C V B N M < > ? {shift}",".com @ {space}"]};var m={"{bksp}":{displayName:"Backspace",className:"backspace"},"{tab}":{displayName:"&#11134;",className:"tab"},"{del}":{displayName:"Del",className:"del"},"{capslock}":{displayName:"Caps Lock",className:"capslock"},"{enter}":{displayName:"&#9166;",className:"enter"},"{shiftleft}":{displayName:"&#8679;",className:"shift"},"{shiftright}":{displayName:"&#8679;",className:"shift"},"{ctrlleft}":{displayName:"Ctrl",className:"ctrl"},"{home}":{displayName:"&#10070;",className:"home"},"{altleft}":{displayName:"Alt",className:"alt"},"{space}":{displayName:"",className:"space"},"{altright}":{displayName:"Alt",className:"alt"},"{ctrlright}":{displayName:"Ctrl",className:"ctrl"}},h=Object.freeze({GENERAL:1,FUNCTIONAL:2}),y=Object.freeze({EN:b,RU:{default:["ё 1 2 3 4 5 6 7 8 9 0 - = {bksp}","{tab} й ц у к е н г ш щ з х ъ \\","{lock} ф ы в а п р о л д ж э {enter}","{shift} / я ч с м и т ь б ю . {shift}",".com @ {space}"],shift:['Ё ! " № ; % : ? * ( ) _ + {bksp}',"{tab} Й Ц У К Е Н Г Ш Щ З Х Ъ /","{lock} Ф Ы В А П Р О Л Д Ж Э {enter}","{shift} | Я Ч С М И Т Ь Б Ю , {shift}",".com @ {space}"]}});function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}const g=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)}var t,n;return t=e,n=[{key:"getButtonType",value:function(e){return e.includes("{")&&e.includes("}")&&"{//}"!==e?h.FUNCTIONAL:h.GENERAL}},{key:"getLocalizedDisplayName",value:function(e,t){return y[e],y[e]}},{key:"getFunctionalButton",value:function(e){return m[e]}},{key:"changeLanguage",value:function(e){return e||defaultLanguage}}],null&&C(t.prototype,null),n&&C(t,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}const x=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.layout=n||b,this.keyboardContainer=t}var t,n;return t=e,(n=[{key:"init",value:function(){for(var e=this.layout.default,t=0;t<e.length;t+=1){var n=document.createElement("div"),r=e[t].split(" ");n.classList.add("button-row");for(var a=0;a<r.length;a+=1){var o=document.createElement("div");o.classList.add("button");var i=r[a],s=i;switch(g.getButtonType(i)){case h.FUNCTIONAL:var c=g.getFunctionalButton(i);s=c.displayName,o.classList.add(c.className);case h.GENERAL:}o.innerHTML=s,n.appendChild(o)}this.keyboardContainer.appendChild(n)}}}])&&v(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function k(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}new(function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.parentElement=t}var t,n;return t=e,(n=[{key:"init",value:function(){var e,t;e=this.parentElement,(t=document.createElement("div")).classList.add("container"),function(e){var t=document.createElement("textarea");t.classList.add("textarea"),t.placeholder="Start typing...",t.cols="80",t.rows="13",e.appendChild(t)}(t),function(e){var t=document.createElement("div");t.classList.add("keyboard"),new x(t).init(),e.appendChild(t)}(t),function(e){var t=document.createElement("div");t.classList.add("description"),t.innerText="Клавиатура создана в операционной системе Windows\n        Для переключения языка комбинация: левыe ctrl + alt",e.appendChild(t)}(t),e.appendChild(t)}}])&&k(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}())(document.querySelector("body")).init()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,